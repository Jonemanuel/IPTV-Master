{"ast":null,"code":"var _jsxFileName = \"/home/jonatas/Documentos/Projetos/iptv/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport Hls from \"hls.js\"; // Importar a biblioteca HLS.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [url, setUrl] = useState(\"\"); // URL para carregar lista M3U\n  const [usuario, setUsuario] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const [canais, setCanais] = useState([]); // Lista de canais\n  const [selecionado, setSelecionado] = useState(null); // Canal selecionado\n  const [loading, setLoading] = useState(false); // Controle de carregamento\n  const [autenticado, setAutenticado] = useState(false); // Controle de login\n  const videoRef = useRef(null); // Referência ao elemento de vídeo\n\n  // Função para carregar lista M3U pela URL\n  const carregarListaM3U = async () => {\n    setLoading(true);\n    try {\n      const {\n        data\n      } = await axios.get(url, {\n        auth: {\n          username: usuario,\n          password: senha\n        }\n      });\n      processarM3U(data);\n    } catch (error) {\n      console.error(\"Erro ao carregar lista M3U:\", error);\n      alert(\"Falha ao carregar a lista. Verifique a URL ou as credenciais.\");\n    }\n    setLoading(false);\n  };\n\n  // Processa o conteúdo M3U e extrai os canais\n  const processarM3U = data => {\n    const linhas = data.split(\"\\n\");\n    const lista = [];\n    for (let i = 0; i < linhas.length; i++) {\n      if (linhas[i].startsWith(\"#EXTINF\")) {\n        const nome = linhas[i].split(\",\")[1];\n        const urlStream = linhas[i + 1].trim();\n        lista.push({\n          nome,\n          urlStream\n        });\n      }\n    }\n    setCanais(lista);\n  };\n\n  // Função para carregar arquivos M3U locais\n  const carregarArquivoM3U = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      processarM3U(e.target.result);\n    };\n    reader.readAsText(file);\n  };\n\n  // Função para carregar o vídeo usando HLS.js\n  const carregarVideo = urlStream => {\n    if (Hls.isSupported()) {\n      const hls = new Hls();\n      hls.loadSource(urlStream);\n      hls.attachMedia(videoRef.current);\n      hls.on(Hls.Events.MANIFEST_PARSED, () => {\n        videoRef.current.play();\n      });\n    } else if (videoRef.current.canPlayType(\"application/vnd.apple.mpegurl\")) {\n      videoRef.current.src = urlStream;\n      videoRef.current.addEventListener(\"loadedmetadata\", () => {\n        videoRef.current.play();\n      });\n    }\n  };\n\n  // Quando o canal é selecionado, carregar o vídeo correspondente\n  useEffect(() => {\n    if (selecionado) {\n      carregarVideo(selecionado.urlStream);\n    }\n  }, [selecionado]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"IPTV Web Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), !autenticado ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Usu\\xE1rio\",\n        value: usuario,\n        onChange: e => setUsuario(e.target.value),\n        style: {\n          margin: \"5px\",\n          padding: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Senha\",\n        value: senha,\n        onChange: e => setSenha(e.target.value),\n        style: {\n          margin: \"5px\",\n          padding: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setAutenticado(true),\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Cole a URL da lista M3U\",\n        value: url,\n        onChange: e => setUrl(e.target.value),\n        style: {\n          width: \"300px\",\n          padding: \"10px\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: carregarListaM3U,\n        children: \"Carregar Lista\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".m3u\",\n        onChange: carregarArquivoM3U\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          marginTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"30%\",\n            borderRight: \"1px solid #ddd\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Lista de Canais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: canais.map((canal, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelecionado(canal),\n                children: canal.nome\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"70%\",\n            padding: \"20px\"\n          },\n          children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Carregando lista...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this) : selecionado ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: selecionado.nome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n              ref: videoRef,\n              controls: true,\n              style: {\n                width: \"100%\",\n                height: \"500px\"\n              },\n              onError: () => alert(\"Erro ao carregar o vídeo. Verifique a URL do stream!\"),\n              children: \"Seu navegador n\\xE3o suporta o formato de v\\xEDdeo.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Selecione um canal para assistir.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"3hjKAK8lSQ+1yu38G+WEzfXCqFQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Hls","jsxDEV","_jsxDEV","App","_s","url","setUrl","usuario","setUsuario","senha","setSenha","canais","setCanais","selecionado","setSelecionado","loading","setLoading","autenticado","setAutenticado","videoRef","carregarListaM3U","data","get","auth","username","password","processarM3U","error","console","alert","linhas","split","lista","i","length","startsWith","nome","urlStream","trim","push","carregarArquivoM3U","event","file","target","files","reader","FileReader","onload","e","result","readAsText","carregarVideo","isSupported","hls","loadSource","attachMedia","current","on","Events","MANIFEST_PARSED","play","canPlayType","src","addEventListener","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","margin","onClick","width","marginRight","accept","display","marginTop","borderRight","map","canal","index","ref","controls","height","onError","_c","$RefreshReg$"],"sources":["/home/jonatas/Documentos/Projetos/iptv/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport Hls from \"hls.js\"; // Importar a biblioteca HLS.js\n\nconst App = () => {\n  const [url, setUrl] = useState(\"\"); // URL para carregar lista M3U\n  const [usuario, setUsuario] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const [canais, setCanais] = useState([]); // Lista de canais\n  const [selecionado, setSelecionado] = useState(null); // Canal selecionado\n  const [loading, setLoading] = useState(false); // Controle de carregamento\n  const [autenticado, setAutenticado] = useState(false); // Controle de login\n  const videoRef = useRef(null); // Referência ao elemento de vídeo\n\n  // Função para carregar lista M3U pela URL\n  const carregarListaM3U = async () => {\n    setLoading(true);\n    try {\n      const { data } = await axios.get(url, {\n        auth: {\n          username: usuario,\n          password: senha,\n        },\n      });\n      processarM3U(data);\n    } catch (error) {\n      console.error(\"Erro ao carregar lista M3U:\", error);\n      alert(\"Falha ao carregar a lista. Verifique a URL ou as credenciais.\");\n    }\n    setLoading(false);\n  };\n\n  // Processa o conteúdo M3U e extrai os canais\n  const processarM3U = (data) => {\n    const linhas = data.split(\"\\n\");\n    const lista = [];\n\n    for (let i = 0; i < linhas.length; i++) {\n      if (linhas[i].startsWith(\"#EXTINF\")) {\n        const nome = linhas[i].split(\",\")[1];\n        const urlStream = linhas[i + 1].trim();\n        lista.push({ nome, urlStream });\n      }\n    }\n    setCanais(lista);\n  };\n\n  // Função para carregar arquivos M3U locais\n  const carregarArquivoM3U = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      processarM3U(e.target.result);\n    };\n    reader.readAsText(file);\n  };\n\n  // Função para carregar o vídeo usando HLS.js\n  const carregarVideo = (urlStream) => {\n    if (Hls.isSupported()) {\n      const hls = new Hls();\n      hls.loadSource(urlStream);\n      hls.attachMedia(videoRef.current);\n      hls.on(Hls.Events.MANIFEST_PARSED, () => {\n        videoRef.current.play();\n      });\n    } else if (videoRef.current.canPlayType(\"application/vnd.apple.mpegurl\")) {\n      videoRef.current.src = urlStream;\n      videoRef.current.addEventListener(\"loadedmetadata\", () => {\n        videoRef.current.play();\n      });\n    }\n  };\n\n  // Quando o canal é selecionado, carregar o vídeo correspondente\n  useEffect(() => {\n    if (selecionado) {\n      carregarVideo(selecionado.urlStream);\n    }\n  }, [selecionado]);\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h1>IPTV Web Player</h1>\n\n      {/* Login */}\n      {!autenticado ? (\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Usuário\"\n            value={usuario}\n            onChange={(e) => setUsuario(e.target.value)}\n            style={{ margin: \"5px\", padding: \"10px\" }}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Senha\"\n            value={senha}\n            onChange={(e) => setSenha(e.target.value)}\n            style={{ margin: \"5px\", padding: \"10px\" }}\n          />\n          <button onClick={() => setAutenticado(true)}>Entrar</button>\n        </div>\n      ) : (\n        <div>\n          {/* Input para URL da lista M3U */}\n          <input\n            type=\"text\"\n            placeholder=\"Cole a URL da lista M3U\"\n            value={url}\n            onChange={(e) => setUrl(e.target.value)}\n            style={{ width: \"300px\", padding: \"10px\", marginRight: \"10px\" }}\n          />\n          <button onClick={carregarListaM3U}>Carregar Lista</button>\n\n          {/* Upload de arquivo M3U */}\n          <input type=\"file\" accept=\".m3u\" onChange={carregarArquivoM3U} />\n\n          {/* Exibir a lista de canais */}\n          <div style={{ display: \"flex\", marginTop: \"20px\" }}>\n            <div style={{ width: \"30%\", borderRight: \"1px solid #ddd\" }}>\n              <h3>Lista de Canais</h3>\n              <ul>\n                {canais.map((canal, index) => (\n                  <li key={index}>\n                    <button onClick={() => setSelecionado(canal)}>\n                      {canal.nome}\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            </div>\n\n            {/* Exibir o player de vídeo ou mensagem */}\n            <div style={{ width: \"70%\", padding: \"20px\" }}>\n              {loading ? (\n                <p>Carregando lista...</p>\n              ) : selecionado ? (\n                <div>\n                  <h3>{selecionado.nome}</h3>\n                  <video\n                    ref={videoRef}\n                    controls\n                    style={{ width: \"100%\", height: \"500px\" }}\n                    onError={() => alert(\"Erro ao carregar o vídeo. Verifique a URL do stream!\")}\n                  >\n                    Seu navegador não suporta o formato de vídeo.\n                  </video>\n                </div>\n              ) : (\n                <p>Selecione um canal para assistir.</p>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}