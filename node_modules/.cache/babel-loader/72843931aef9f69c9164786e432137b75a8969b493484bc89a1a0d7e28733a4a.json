{"ast":null,"code":"var _jsxFileName = \"/home/jonatas/Documentos/Projetos/iptv/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Adicionar as contas IPTV\n  const [contasIptv] = useState([{\n    nome: \"Iptv1\",\n    login: \"899559\",\n    senha: \"316805\",\n    url: \"http://supersonictv.live:8080\"\n  }, {\n    nome: \"Iptv2\",\n    login: \"329474\",\n    senha: \"903964\",\n    url: \"http://supersonictv.live:8080\"\n  }, {\n    nome: \"Iptv3\",\n    login: \"reginaldooliver1\",\n    senha: \"oliverreginaldo\",\n    url: \"https://vptdlxun.online\"\n  }, {\n    nome: \"Iptv4\",\n    login: \"1103581436\",\n    senha: \"4099381829\",\n    url: \"http://zkbvzkj.megahdtv.xyz:80\"\n  }]);\n  const [selecionado, setSelecionado] = useState(null);\n\n  // Função para carregar lista M3U (opcional, se você também quiser isso)\n  const carregarListaM3U = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(\"URL_M3U\"); // Altere para a URL correta do seu arquivo M3U\n      const linhas = data.split(\"\\n\");\n      const lista = [];\n      for (let i = 0; i < linhas.length; i++) {\n        if (linhas[i].startsWith(\"#EXTINF\")) {\n          const nome = linhas[i].split(\",\")[1];\n          const urlStream = linhas[i + 1];\n          lista.push({\n            nome,\n            urlStream\n          });\n        }\n      }\n\n      // Guardar lista M3U no estado\n      localStorage.setItem(\"listaM3U\", JSON.stringify(lista));\n    } catch (error) {\n      console.error(\"Erro ao carregar lista M3U:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"IPTV Web Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Contas IPTV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: contasIptv.map((conta, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelecionado(conta),\n          children: conta.nome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        paddingTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Detalhes da Conta Selecionada\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), selecionado ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Nome:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 16\n          }, this), \" \", selecionado.nome]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Login:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 16\n          }, this), \" \", selecionado.login]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Senha:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 16\n          }, this), \" \", selecionado.senha]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"URL:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 16\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: selecionado.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: selecionado.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          autoPlay: true,\n          style: {\n            width: \"100%\",\n            height: \"500px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: selecionado.url,\n            type: \"application/x-mpegURL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Selecione uma conta para ver os detalhes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"xncOazMPQiVr9FhHhhBPDHxgie0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","contasIptv","nome","login","senha","url","selecionado","setSelecionado","carregarListaM3U","data","get","linhas","split","lista","i","length","startsWith","urlStream","push","localStorage","setItem","JSON","stringify","error","console","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","map","conta","index","onClick","marginTop","paddingTop","href","target","rel","controls","autoPlay","width","height","src","type","_c","$RefreshReg$"],"sources":["/home/jonatas/Documentos/Projetos/iptv/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst App = () => {\n  // Adicionar as contas IPTV\n  const [contasIptv] = useState([\n    {\n      nome: \"Iptv1\",\n      login: \"899559\",\n      senha: \"316805\",\n      url: \"http://supersonictv.live:8080\",\n    },\n    {\n      nome: \"Iptv2\",\n      login: \"329474\",\n      senha: \"903964\",\n      url: \"http://supersonictv.live:8080\",\n    },\n    {\n      nome: \"Iptv3\",\n      login: \"reginaldooliver1\",\n      senha: \"oliverreginaldo\",\n      url: \"https://vptdlxun.online\",\n    },\n    {\n      nome: \"Iptv4\",\n      login: \"1103581436\",\n      senha: \"4099381829\",\n      url: \"http://zkbvzkj.megahdtv.xyz:80\",\n    },\n  ]);\n  const [selecionado, setSelecionado] = useState(null);\n\n  // Função para carregar lista M3U (opcional, se você também quiser isso)\n  const carregarListaM3U = async () => {\n    try {\n      const { data } = await axios.get(\"URL_M3U\"); // Altere para a URL correta do seu arquivo M3U\n      const linhas = data.split(\"\\n\");\n      const lista = [];\n\n      for (let i = 0; i < linhas.length; i++) {\n        if (linhas[i].startsWith(\"#EXTINF\")) {\n          const nome = linhas[i].split(\",\")[1];\n          const urlStream = linhas[i + 1];\n          lista.push({ nome, urlStream });\n        }\n      }\n\n      // Guardar lista M3U no estado\n      localStorage.setItem(\"listaM3U\", JSON.stringify(lista));\n    } catch (error) {\n      console.error(\"Erro ao carregar lista M3U:\", error);\n    }\n  };\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h1>IPTV Web Player</h1>\n\n      {/* Lista de contas IPTV */}\n      <h3>Contas IPTV</h3>\n      <ul>\n        {contasIptv.map((conta, index) => (\n          <li key={index}>\n            <button onClick={() => setSelecionado(conta)}>\n              {conta.nome}\n            </button>\n          </li>\n        ))}\n      </ul>\n\n      <div style={{ marginTop: \"20px\", paddingTop: \"20px\" }}>\n        <h3>Detalhes da Conta Selecionada</h3>\n        {selecionado ? (\n          <div>\n            <p><strong>Nome:</strong> {selecionado.nome}</p>\n            <p><strong>Login:</strong> {selecionado.login}</p>\n            <p><strong>Senha:</strong> {selecionado.senha}</p>\n            <p><strong>URL:</strong> <a href={selecionado.url} target=\"_blank\" rel=\"noopener noreferrer\">{selecionado.url}</a></p>\n            <video\n              controls\n              autoPlay\n              style={{ width: \"100%\", height: \"500px\" }}\n            >\n              <source src={selecionado.url} type=\"application/x-mpegURL\" />\n            </video>\n          </div>\n        ) : (\n          <p>Selecione uma conta para ver os detalhes.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}