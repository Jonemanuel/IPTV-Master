{"ast":null,"code":"var _jsxFileName = \"/home/jonatas/Documentos/Projetos/iptv/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [login, setLogin] = useState(\"\"); // Login do usuário\n  const [senha, setSenha] = useState(\"\"); // Senha do usuário\n  const [urlServidor, setUrlServidor] = useState(\"\"); // URL do servidor IPTV\n  const [canais, setCanais] = useState({}); // Lista de canais organizados por categoria\n  const [selecionado, setSelecionado] = useState(null); // Canal selecionado\n  const [loading, setLoading] = useState(false); // Controle de carregamento\n  const videoRef = useRef(null); // Referência ao player de vídeo\n\n  // Função para carregar a lista de canais IPTV\n  const carregarCanais = async () => {\n    setLoading(true); // Inicia o carregamento\n    try {\n      const urlM3U = `${urlServidor}/get.php?username=${login}&password=${senha}&type=m3u_plus&output=mpegts`;\n      const {\n        data\n      } = await axios.get(urlM3U);\n      const linhas = data.split(\"\\n\");\n      const lista = [];\n      let categoriaAtual = \"Outros\"; // Categoria padrão\n\n      // Processamento da lista M3U\n      for (let i = 0; i < linhas.length; i++) {\n        if (linhas[i].startsWith(\"#EXTINF\")) {\n          const nome = linhas[i].split(\",\")[1];\n          const urlStream = linhas[i + 1];\n          if (linhas[i].includes(\"group-title\")) {\n            const match = linhas[i].match(/group-title=\"([^\"]+)\"/);\n            if (match) categoriaAtual = match[1];\n          }\n          lista.push({\n            nome,\n            urlStream,\n            categoria: categoriaAtual\n          });\n        }\n      }\n\n      // Organiza os canais por categoria\n      const canaisPorCategoria = lista.reduce((acc, canal) => {\n        if (!acc[canal.categoria]) acc[canal.categoria] = [];\n        acc[canal.categoria].push(canal);\n        return acc;\n      }, {});\n      setCanais(canaisPorCategoria);\n    } catch (error) {\n      console.error(\"Erro ao carregar canais:\", error);\n    }\n    setLoading(false); // Finaliza o carregamento\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"IPTV Web Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Login\",\n      value: login,\n      onChange: e => setLogin(e.target.value),\n      style: {\n        margin: \"5px\",\n        padding: \"8px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Senha\",\n      value: senha,\n      onChange: e => setSenha(e.target.value),\n      style: {\n        margin: \"5px\",\n        padding: \"8px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"URL do Servidor IPTV\",\n      value: urlServidor,\n      onChange: e => setUrlServidor(e.target.value),\n      style: {\n        margin: \"5px\",\n        padding: \"8px\",\n        width: \"300px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: carregarCanais,\n      style: {\n        marginLeft: \"10px\"\n      },\n      children: \"Carregar Canais\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"30%\",\n          borderRight: \"1px solid #ddd\",\n          overflowY: \"scroll\",\n          maxHeight: \"600px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Lista de Canais\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), Object.keys(canais).map(categoria => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: categoria\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: canais[categoria].map((canal, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelecionado(canal),\n                style: {\n                  display: \"block\",\n                  width: \"100%\",\n                  textAlign: \"left\",\n                  padding: \"5px\",\n                  background: \"none\",\n                  border: \"none\",\n                  cursor: \"pointer\"\n                },\n                children: canal.nome\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, categoria, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"70%\",\n          padding: \"20px\",\n          overflow: \"hidden\"\n        },\n        children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Carregando canais...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this) : selecionado ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selecionado.nome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            controls: true,\n            style: {\n              width: \"100%\",\n              height: \"500px\"\n            },\n            onError: () => alert(\"Erro ao carregar o vídeo. Verifique a URL do stream!\"),\n            children: [/*#__PURE__*/_jsxDEV(\"source\", {\n              src: selecionado.urlStream,\n              type: \"application/x-mpegURL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), \"Seu navegador n\\xE3o suporta o formato de v\\xEDdeo.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Selecione um canal para assistir.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"/o4Vdd6Fi6fijAv14QAIobyo7ZY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","axios","jsxDEV","_jsxDEV","App","_s","login","setLogin","senha","setSenha","urlServidor","setUrlServidor","canais","setCanais","selecionado","setSelecionado","loading","setLoading","videoRef","carregarCanais","urlM3U","data","get","linhas","split","lista","categoriaAtual","i","length","startsWith","nome","urlStream","includes","match","push","categoria","canaisPorCategoria","reduce","acc","canal","error","console","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","margin","width","onClick","marginLeft","display","marginTop","borderRight","overflowY","maxHeight","Object","keys","map","index","textAlign","background","border","cursor","overflow","ref","controls","height","onError","alert","src","_c","$RefreshReg$"],"sources":["/home/jonatas/Documentos/Projetos/iptv/src/App.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [login, setLogin] = useState(\"\"); // Login do usuário\n  const [senha, setSenha] = useState(\"\"); // Senha do usuário\n  const [urlServidor, setUrlServidor] = useState(\"\"); // URL do servidor IPTV\n  const [canais, setCanais] = useState({}); // Lista de canais organizados por categoria\n  const [selecionado, setSelecionado] = useState(null); // Canal selecionado\n  const [loading, setLoading] = useState(false); // Controle de carregamento\n  const videoRef = useRef(null); // Referência ao player de vídeo\n\n  // Função para carregar a lista de canais IPTV\n  const carregarCanais = async () => {\n    setLoading(true); // Inicia o carregamento\n    try {\n      const urlM3U = `${urlServidor}/get.php?username=${login}&password=${senha}&type=m3u_plus&output=mpegts`;\n      const { data } = await axios.get(urlM3U);\n      const linhas = data.split(\"\\n\");\n      const lista = [];\n      let categoriaAtual = \"Outros\"; // Categoria padrão\n\n      // Processamento da lista M3U\n      for (let i = 0; i < linhas.length; i++) {\n        if (linhas[i].startsWith(\"#EXTINF\")) {\n          const nome = linhas[i].split(\",\")[1];\n          const urlStream = linhas[i + 1];\n          if (linhas[i].includes(\"group-title\")) {\n            const match = linhas[i].match(/group-title=\"([^\"]+)\"/);\n            if (match) categoriaAtual = match[1];\n          }\n          lista.push({ nome, urlStream, categoria: categoriaAtual });\n        }\n      }\n\n      // Organiza os canais por categoria\n      const canaisPorCategoria = lista.reduce((acc, canal) => {\n        if (!acc[canal.categoria]) acc[canal.categoria] = [];\n        acc[canal.categoria].push(canal);\n        return acc;\n      }, {});\n\n      setCanais(canaisPorCategoria);\n    } catch (error) {\n      console.error(\"Erro ao carregar canais:\", error);\n    }\n    setLoading(false); // Finaliza o carregamento\n  };\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h1>IPTV Web Player</h1>\n\n      {/* Campos para Login, Senha e URL */}\n      <input\n        type=\"text\"\n        placeholder=\"Login\"\n        value={login}\n        onChange={(e) => setLogin(e.target.value)}\n        style={{ margin: \"5px\", padding: \"8px\" }}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Senha\"\n        value={senha}\n        onChange={(e) => setSenha(e.target.value)}\n        style={{ margin: \"5px\", padding: \"8px\" }}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"URL do Servidor IPTV\"\n        value={urlServidor}\n        onChange={(e) => setUrlServidor(e.target.value)}\n        style={{ margin: \"5px\", padding: \"8px\", width: \"300px\" }}\n      />\n      <button onClick={carregarCanais} style={{ marginLeft: \"10px\" }}>\n        Carregar Canais\n      </button>\n\n      {/* Layout: Lista de Canais e Player */}\n      <div style={{ display: \"flex\", marginTop: \"20px\" }}>\n        <div\n          style={{\n            width: \"30%\",\n            borderRight: \"1px solid #ddd\",\n            overflowY: \"scroll\",\n            maxHeight: \"600px\",\n          }}\n        >\n          <h3>Lista de Canais</h3>\n          \n          {/* Exibe os canais por categoria */}\n          {Object.keys(canais).map((categoria) => (\n            <div key={categoria}>\n              <h4>{categoria}</h4>\n              <ul>\n                {canais[categoria].map((canal, index) => (\n                  <li key={index}>\n                    <button\n                      onClick={() => setSelecionado(canal)}\n                      style={{\n                        display: \"block\",\n                        width: \"100%\",\n                        textAlign: \"left\",\n                        padding: \"5px\",\n                        background: \"none\",\n                        border: \"none\",\n                        cursor: \"pointer\",\n                      }}\n                    >\n                      {canal.nome}\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ))}\n        </div>\n\n        {/* Player de Vídeo */}\n        <div style={{ width: \"70%\", padding: \"20px\", overflow: \"hidden\" }}>\n          {loading ? (\n            <p>Carregando canais...</p>\n          ) : selecionado ? (\n            <div>\n              <h3>{selecionado.nome}</h3>\n              <video\n                ref={videoRef}\n                controls\n                style={{ width: \"100%\", height: \"500px\" }}\n                onError={() => alert(\"Erro ao carregar o vídeo. Verifique a URL do stream!\")}\n              >\n                <source src={selecionado.urlStream} type=\"application/x-mpegURL\" />\n                Seu navegador não suporta o formato de vídeo.\n              </video>\n            </div>\n          ) : (\n            <p>Selecione um canal para assistir.</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}